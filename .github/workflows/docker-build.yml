name: Docker Build & Push

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME_BACKEND: ${{ github.repository }}/backend
      IMAGE_NAME_FRONTEND: ${{ github.repository }}/frontend

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Log in to GitHub Container Registry
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 3. Build backend Docker image
      - name: Build backend image
        run: |
          docker build -t $REGISTRY/$IMAGE_NAME_BACKEND:${{ github.sha }} ./backend
          docker tag $REGISTRY/$IMAGE_NAME_BACKEND:${{ github.sha }} $REGISTRY/$IMAGE_NAME_BACKEND:latest

      # 3b. Run backend Prisma migrations (temporary container)
      - name: Run backend Prisma migrations
        run: |
          docker run --rm \
            -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
            -e JWT_ACCESS_SECRET=${{ secrets.JWT_ACCESS_SECRET }} \
            -e JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }} \
            -e REDIS_HOST=${{ secrets.REDIS_HOST }} \
            -e REDIS_PORT=${{ secrets.REDIS_PORT }} \
            $REGISTRY/$IMAGE_NAME_BACKEND:${{ github.sha }} \
            npx prisma migrate deploy

      # 4. Push backend image
      - name: Push backend image
        run: |
          docker push $REGISTRY/$IMAGE_NAME_BACKEND:${{ github.sha }}
          docker push $REGISTRY/$IMAGE_NAME_BACKEND:latest

      # 5. Build frontend Docker image
      - name: Build frontend image
        run: |
          docker build -t $REGISTRY/$IMAGE_NAME_FRONTEND:${{ github.sha }} ./frontend
          docker tag $REGISTRY/$IMAGE_NAME_FRONTEND:${{ github.sha }} $REGISTRY/$IMAGE_NAME_FRONTEND:latest

      # 6. Push frontend image
      - name: Push frontend image
        run: |
          docker push $REGISTRY/$IMAGE_NAME_FRONTEND:${{ github.sha }}
          docker push $REGISTRY/$IMAGE_NAME_FRONTEND:latest
